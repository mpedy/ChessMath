<div id="title">Muovi il Cavallo verso il punto evidenziato nel minor numero di mosse sulla scacchiera toroidale</div>
<div id="chessboard"></div>
<div>
	<div style="background: black;">Mosse: <span id="number_of_moves">0</span></div>
	<div class="timer" data-second="120" data-height="20px" data-width="80%"></div>
	<button style="border-radius: 10px; display: block; margin: 30px auto 15px auto; padding: 5px;" id="ricomincia" onclick="ricomincia()" >Ricomincia</button>
	<script type="text/javascript">
	maketimer(document.getElementsByClassName("timer")[0]);
	stopTimerFunction = function(){
		handleMouseDown_casella = function(){}
		handleMouseDown_image = function(){}
		$("#ricomincia").prop("disabled",true);
		procedi()
	}
	</script>
</div>

<script type="text/javascript">

drawChessboard(document.getElementById("chessboard"))

piece_position={
	H8: "Knight.svg",
	G8: "obstacle.svg",
	G7: "obstacle.svg",
	H7: "obstacle.svg",
	E4: "obstacle.svg",
	G6: "obstacle.svg",
	C2: "obstacle.svg",
	C5: "obstacle.svg",
	B2: "obstacle.svg",
	B3: "obstacle.svg",
	B5: "obstacle.svg",
	D1: "obstacle.svg",
	D3: "obstacle.svg"
}

drawPieces(document.getElementById("chessboard"),piece_position)

var caselle_colorate = new Array();
var caselle_corrette = [A5,B5,C5,E5,F5,G5,H5,D4,D3,D2,D1]

var enlighted = "";

var moving_pieces = {
	"Knight" :H8
}
var moving_piece = "";
var possible_moves = new Array();
var obstacles = ["rock-golem-1", "rock-golem","obstacle"]
var end_position=C3;
var number_of_moves = 0;
var show_possible_moves = false;

ricomincia = function(){
	$("#chessboard").html("")[0].style=""
	drawChessboard(document.getElementById("chessboard"));
	drawPieces(document.getElementById("chessboard"),piece_position);
	moving_pieces = {
		"Knight" : H8
	}
	enlighted="";
	enlight(end_position,"orange",true);
	number_of_moves = 0;
	$("#number_of_moves").html(number_of_moves);
	possible_moves = new Array();
	caselle_colorate = new Array();
}

handleMouseDown_casella = function(e){
    var elem = e.currentTarget;
    //console.log(elem)
    casella = elem.getAttribute("casella");
    if(possible_moves.includes(casella)){
    	move(moving_piece, elem.id);
    	moving_piece = "";
    	possible_moves = new Array();
    	e.stopPropagation();
    	e.preventDefault();
    }else{
    	//console.log("non sposto" + moving_piece)
    }
}

move = function(moving_piece, casella){
	//console.log("sposto "+moving_piece+ " in "+casella);
	var piece = moving_piece.split(";")[0]
	var from = moving_piece.split(";")[1]
	var _to = casella;
	var elem_from = document.getElementById(from);
	enlighted=""
	elem_from.removeChild(elem_from.children[elem_from.childElementCount-1])
	elem_from.removeChild(elem_from.children[elem_from.childElementCount-1])
	var elem_to = document.getElementById(_to);
	var lst = new Object();
	lst[_to] = piece+".svg";
	reset();
	drawPieces(document.getElementById("chessboard"),lst);
	moving_pieces[piece] = _to;
	number_of_moves+=dist(from,_to);
	$("#number_of_moves").html(number_of_moves);
	if(_to == end_position){
		goal_reached()
	}
}

dist = function(from, to){
	return 1;
}

enlight(end_position,"orange",true);

handleMouseDown_image = function(e){
	//console.log(e.currentTarget);
	var elem = e.currentTarget;
	var casella = elem.getAttribute("data-casella");
	var type = elem.getAttribute("data-type")
	//console.log("Casella e tipo: " + casella+"-"+type)
	if(enlighted == casella){
		return;
	}
	var can_move = false;
	for(var i in moving_pieces){
		if(i==type && moving_pieces[i]==casella){
			can_move = true;
			moving_piece = i+";"+moving_pieces[i];
			break;
		}
	}
	//console.log("Can Move? "+can_move)
	if(can_move){
		calculatePossibleMoves(casella, type);
		enlight(casella, "orange");
	}
}

calculatePossibleMoves = function(casella, type){
	possible_moves = new Array();
	switch(type){
		case "Knight":{
			var x = casella.charCodeAt(0)-65+1;
			var y = parseInt(casella[1]);
			possible_moves = toro_moveKnight(casella, x ,y);
		}
		break;
	}
	//console.log(possible_moves);
	if(show_possible_moves){
		for(var i in possible_moves){
			var elem = document.getElementById(possible_moves[i]);
			caselle_colorate.push(possible_moves[i]);
    		var div = document.createElement("div");
    		div.style.background="blue"
    		div.style.borderRadius="50%"
    		div.style.position="absolute"
    		div.style.left="10%"
    		div.style.top="10%"
    		div.style.width="80%"
    		div.style.height="80%"
    		div.style.zIndex="1";
    		elem.appendChild(div);
		}
	}
}


reset = function(){
	for(var i in caselle_colorate){
		var elem = document.getElementById(caselle_colorate[i])
		elem.removeChild(elem.children[elem.childElementCount-1]);
	}
	caselle_colorate = new Array();
}

goal_reached = function(){
	punti = getPoints();
	myconfirm_2b("Obiettivo raggiunto","Hai impiegato "+number_of_moves+" mosse. Vuoi riprovare?","sì","no",
		function() {
        	$( this ).dialog( "close" );
			ricomincia();
			$(this).remove();
      	},function() {
      		$(this).dialog("close");
      		clearInterval(window.myt);
      		sec = 0;
      		$(this).remove();
      		punti-=number_of_moves;
      		myalert("Punti","Il tuo punteggio è di "+punti+" punti!");
      		updatePoints(-number_of_moves);
      		handleMouseDown_casella = function(){}
			handleMouseDown_image = function(){}
			$("#ricomincia").prop("disabled",true);
      	}, false);
}

procedi = function(){
	punti = getPoints();
	punti-=number_of_moves;
	myalert("Punti","Il tuo punteggio è "+punti+".");
	sec = 0;
	updatePoints(-number_of_moves);
	handleMouseDown_casella = function(){}
	handleMouseDown_image = function(){}
	$("#ricomincia").prop("disabled",true);
}

</script>